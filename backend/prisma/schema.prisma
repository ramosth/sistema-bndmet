generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Tabela de leituras do sensor
model LeiturasSensor {
  id        Int      @id @default(autoincrement())
  timestamp DateTime @default(now()) @db.Timestamptz(6)

  // Dados do sensor local
  umidadeSolo   Decimal? @map("umidade_solo") @db.Decimal(5, 2)
  valorAdc      Int?     @map("valor_adc")
  sensorOk      Boolean? @map("sensor_ok") @default(true)
  fatorLocal    Decimal? @map("fator_local") @db.Decimal(5, 3)

  // Dados BNDMET
  precipitacaoAtual       Decimal? @map("precipitacao_atual") @db.Decimal(8, 2)
  precipitacao24h         Decimal? @map("precipitacao_24h") @db.Decimal(8, 2)
  precipitacao7d          Decimal? @map("precipitacao_7d") @db.Decimal(8, 2)
  precipitacao30d         Decimal? @map("precipitacao_30d") @db.Decimal(8, 2)
  statusApiBndmet         String?  @map("status_api_bndmet") @db.VarChar(50)
  qualidadeDadosBndmet    Int?     @map("qualidade_dados_bndmet")

  // Dados meteorológicos
  temperatura         Decimal? @db.Decimal(5, 2)
  umidadeExterna      Decimal? @map("umidade_externa") @db.Decimal(5, 2)
  pressaoAtmosferica  Decimal? @map("pressao_atmosferica") @db.Decimal(7, 2)
  velocidadeVento     Decimal? @map("velocidade_vento") @db.Decimal(5, 2)
  descricaoTempo      String?  @map("descricao_tempo") @db.VarChar(100)

  // Previsão
  precipitacaoPrevisao6h  Decimal? @map("precipitacao_previsao_6h") @db.Decimal(8, 2)
  precipitacaoPrevisao24h Decimal? @map("precipitacao_previsao_24h") @db.Decimal(8, 2)
  tendenciaTempo          String?  @map("tendencia_tempo") @db.VarChar(200)

  // Análise de risco
  riscoIntegrado    Decimal? @map("risco_integrado") @db.Decimal(5, 2)
  indiceRisco       Int?     @map("indice_risco")
  nivelAlerta       String?  @map("nivel_alerta") @db.VarChar(20)
  recomendacao      String?
  confiabilidade    Int?
  tendenciaPiora    Boolean? @map("tendencia_piora")

  // Previsões avançadas
  previsaoUmidade6h   Decimal? @map("previsao_umidade_6h") @db.Decimal(5, 2)
  previsaoUmidade24h  Decimal? @map("previsao_umidade_24h") @db.Decimal(5, 2)
  tempoAteCritico     Decimal? @map("tempo_ate_critico") @db.Decimal(8, 2)

  // Status do sistema
  statusSistema   Int?     @map("status_sistema")
  buzzerAtivo     Boolean? @map("buzzer_ativo")
  modoManual      Boolean? @map("modo_manual")
  wifiConectado   Boolean? @map("wifi_conectado")
  blynkConectado  Boolean? @map("blynk_conectado")

  // Dados brutos JSON
  dadosBrutos Json? @map("dados_brutos")

  // Metadados
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamptz(6)

  @@map("leituras_sensor")
}

// Tabela de logs do sistema
model LogsSistema {
  id          Int      @id @default(autoincrement())
  timestamp   DateTime @default(now()) @db.Timestamptz(6)
  nivel       String   @db.VarChar(20) // INFO, WARNING, ERROR, CRITICAL
  componente  String?  @db.VarChar(50) // SENSOR, BNDMET, CONECTIVIDADE
  mensagem    String
  dadosExtras Json?    @map("dados_extras")
  createdAt   DateTime @default(now()) @map("created_at") @db.Timestamptz(6)

  @@map("logs_sistema")
}

// Tabela de configurações
model Configuracoes {
  id        Int      @id @default(autoincrement())
  chave     String   @unique @db.VarChar(100)
  valor     String?
  descricao String?
  tipo      String?  @default("string") @db.VarChar(20)
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamptz(6)

  @@map("configuracoes")
}

// ===== TABELAS DE AUTENTICAÇÃO =====

// Tabela de usuários administradores
model UsuariosAdmin {
  id               String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  nome             String    @db.VarChar(100)
  email            String    @unique @db.VarChar(255)
  senhaHash        String    @db.VarChar(255) @map("senha_hash")
  perfil           String    @default("admin") @db.VarChar(20)
  ativo            Boolean   @default(true)
  ultimoLogin      DateTime? @map("ultimo_login") @db.Timestamptz(6)
  tokenReset       String?   @map("token_reset") @db.VarChar(255)
  tokenResetExpira DateTime? @map("token_reset_expira") @db.Timestamptz(6)
  createdAt        DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt        DateTime  @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  // Relacionamentos
  sessoes    SessoesUsuario[]
  logsAlertas LogsAlertas[]

  @@map("usuarios_admin")
}

// Tabela de usuários básicos
model UsuariosBasicos {
  id                    String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  nome                  String    @db.VarChar(100)
  email                 String    @unique @db.VarChar(255)
  telefone              String?   @db.VarChar(20)
  ativo                 Boolean   @default(true)
  receberNotificacoes   Boolean   @default(true) @map("receber_notificacoes")
  tipoNotificacao       String    @default("email,sms") @map("tipo_notificacao") @db.VarChar(50)
  ultimoAlertaEnviado   DateTime? @map("ultimo_alerta_enviado") @db.Timestamptz(6)
  createdAt             DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt             DateTime  @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  @@map("usuarios_basicos")
}

// Tabela de sessões de usuário
model SessoesUsuario {
  id        String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  usuarioId String    @map("usuario_id") @db.Uuid
  token     String    @db.VarChar(500)
  ipAddress String?   @map("ip_address") @db.Inet
  userAgent String?   @map("user_agent")
  expiresAt DateTime  @map("expires_at") @db.Timestamptz(6)
  ativo     Boolean   @default(true)
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)

  // Relacionamentos
  usuario UsuariosAdmin @relation(fields: [usuarioId], references: [id], onDelete: Cascade)

  @@map("sessoes_usuario")
}

// Tabela de logs de alertas
model LogsAlertas {
  id                String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  usuarioAdminId    String?  @map("usuario_admin_id") @db.Uuid
  tipoDestinatario  String   @map("tipo_destinatario") @db.VarChar(20)
  destinatariosIds  String[] @map("destinatarios_ids") @db.Uuid
  tipoAlerta        String   @map("tipo_alerta") @db.VarChar(50)
  nivelCriticidade  String   @map("nivel_criticidade") @db.VarChar(20)
  titulo            String   @db.VarChar(200)
  mensagem          String
  canaisEnvio       String   @map("canais_envio") @db.VarChar(100)
  totalEnviados     Int      @default(0) @map("total_enviados")
  totalSucesso      Int      @default(0) @map("total_sucesso")
  totalFalhas       Int      @default(0) @map("total_falhas")
  detalhesEnvio     Json?    @map("detalhes_envio")
  createdAt         DateTime @default(now()) @map("created_at") @db.Timestamptz(6)

  // Relacionamentos
  usuarioAdmin UsuariosAdmin? @relation(fields: [usuarioAdminId], references: [id])

  @@map("logs_alertas")
}